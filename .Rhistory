names(plotTHese)
names(plotThese)
ggplot(plotThese, aes(x = compartment_age, y = fit, min = lwr, max = upr,
colour = factor(leaf_litter_depth)))+
geom_point()
ggplot(plotThese, aes(x = compartment_age, y = fit, min = lwr, max = upr,
colour = factor(leaf_litter_depth)))+
geom_line()
# Step 4: make the plot
ggplot(plotThese, aes(x = compartment_age, y = fit, min = lwr, max = upr,
colour = factor(leaf_litter_depth)))+
geom_line() +
theme_bw()
mod <- lm(Estimator ~ compartment_age +
canopy_closure + leaf_litter_depth + understory_height+
compartent_age*leaf_litter_depth,
data = SR_data)
mod <- lm(Estimator ~ compartment_age +
canopy_closure + leaf_litter_depth + understory_height+
compartment_age*leaf_litter_depth,
data = SR_data)
autoplot(mod)
summary(mod)
mod <- lm(Estimator ~ compartment_age +
canopy_closure + leaf_litter_depth + understory_height+
data = SR_data)
mod <- lm(Estimator ~ compartment_age +
canopy_closure + leaf_litter_depth + understory_height,
data = SR_data)
mod <- lm(sqrt(Estimator) ~ compartment_age +
canopy_closure + leaf_litter_depth + understory_height,
data = SR_data)
autoplot(mod)
summary(mod)
mod <- lm(log(Estimator) ~ compartment_age +
canopy_closure + leaf_litter_depth + understory_height,
data = SR_data)
autoplot(mod)
summary(mod)
# plot model results ----
# Step 1
# newX are defined on a grid of age and leaf litter (significant terms)
# and tat the mean of canopy and understory (insignficant)
newX <- expand.grid(compartment_age = seq(from = 0, to = 50, by = 1),
canopy_closure = mean(SR_data$canopy_closure),
leaf_litter_depth = seq(from = 2, to = 5, by = 1),
understory_height = mean(SR_data$understory_height))
# Step 2: get the predictions
newY <- predict(mod, newdata = newX, interval = 'confidence')
# Step 3: Housekeeping to create data frame to plot
plotThese<-data.frame(newX, newY)
# Step 4: make the plot
ggplot(plotThese, aes(x = compartment_age, y = fit, min = lwr, max = upr,
colour = factor(leaf_litter_depth)))+
geom_line() +
theme_bw()
# fascinating groups....
# it is NOT aligned with any of the covariates.  Nada to Check.
ggplot(SR_data, aes(x = compartment_age, y = Estimator))+
geom_point(size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)
# fascinating groups....
# it is NOT aligned with any of the covariates.  Nada to Check.
ggplot(SR_data, aes(x = compartment_age, y = Estimator))+
geom_point(size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
theme_bw()
?iNEXT
?plot.iNEXT
# visualise the results
# feel free to create more than one version of this!
p1<-plot(compartment_mod)
p2<-plot(compartment_mod, type = 3)
compartment_mod
plot(compartment_mod$'Cov')
compartment_mod$'Cov'
names(compartment_mod)
plot(compartment_mod, type = 3)
?estimateD
estimateD(compartment_use, base = 'coverage')
# What we really want to do is to compute the estimate at a fixed coverage
coverage_min_diversity <- estimateD(compartment_use, base = 'coverage') # at the minimum coverage
coverage_80_diversity <- estimateD(compartment_use, base = 'coverage', level = 0.8) # at 80% coverage (extrapolated)
# visualise the results
# feel free to create more than one version of this!
p1<-plot(coverage_80_diversity)
p1<-ggiNEXT(compartment_mod, type = 1)
p2<-ggiNEXT(compartment_mod, type = 3)
grid.arrange(p1,p2)
?ggiNEXT
# visualise the results
# feel free to create more than one version of this!
p1<-ggiNEXT(compartment_mod, type = 1, grey = FALSE)
p2<-ggiNEXT(compartment_mod, type = 3)
grid.arrange(p1,p2)
# visualise the results
# feel free to create more than one version of this!
plot(compartment_mod, type = 1)
# visualise the results
# feel free to create more than one version of this!
par(mfrow = c(1,2))
plot(compartment_mod, type = 1)
plot(compartment_mod, type = 3)
coverage_min_diversity
?estimateD
# Step 4: Collect Asymptotic estimates for downstream analyses and add habitat data ----
diversity_data_obs <- compartment_mod$AsyEst %>% arrange(as.character(Site))
diversity_data_cov <- coverage_80_SR %>% arrange(as.character(Site))
coverage_80_SR <- estimateD(compartment_use, base = 'coverage', level = 0.8) # at 80% coverage (extrapolated)
coverage_80_SR
coverage_min_diversity
estimateD(spider, "abundance", base="size", level=NULL, conf=0.95)
data(spider)
estimateD(spider, "abundance", base="size", level=NULL, conf=0.95)
estimateD
diversity_data_cov <- coverage_min_diversity %>% arrange(as.character(Site))
diversity_data_cov
diversity_data_cov <- coverage_min_diversity %>% arrange(as.character(Site))
# What we really want to do is to compute the estimate at a fixed coverage
coverage_min_diversity <- estimateD(compartment_use, base = 'coverage') # at the minimum coverage
coverage_min_diversity
diversity_data_cov <- coverage_min_diversity %>% arrange(as.character(site))
diversity_data_cov
# at the minimum coverage
coverage_min_diversity <- estimateD(compartment_use, base = 'coverage') %>% rename(site = Site)
estimateD(compartment_use, base = 'coverage')
estimateD(compartment_use, base = 'coverage') %>% rename(site = Site)
estimateD(compartment_use, base = 'coverage') %>% rename(Site = site)
# at 80% coverage (extrapolated)
coverage_80_diversity <- estimateD(compartment_use, base = 'coverage', level = 0.8) %>% rename(Site = site)
diversity_data_cov <- coverage_min_diversity %>% arrange(as.character(Site))
coverage_min_diversity
# at the minimum coverage
coverage_min_diversity <- estimateD(compartment_use, base = 'coverage') %>% rename(Site = site)
# at 80% coverage (extrapolated)
coverage_80_diversity <- estimateD(compartment_use, base = 'coverage', level = 0.8) %>% rename(Site = site)
coverage_min_diversity
diversity_data_cov <- coverage_min_diversity %>% arrange(as.character(Site))
unique(diversity_data_cov$Site)
habitat2 <- arrange(habitat, Compartment) %>% rename(Site = Compartment)
habitat_use <- filter(habitat2, Site %in% diversity_data_cov$Site)
names(habitat_use)
diversity_data_cov
df <- data.frame(diversity_data_cov,
compartment_age = rep(habitat_use$ForestAge, each= 3),
canopy_closure = rep(habitat_use$CanopyClosure, each = 3),
leaf_litter_depth = rep(habitat_use$LeafLitterDepth, each = 3),
understory_height = rep(habitat_use$HerbPlantHeight, each = 3)) %>%
mutate(coverage = SC)
df
df <- data.frame(diversity_data_cov,
compartment_age = rep(habitat_use$ForestAge, each= 3),
canopy_closure = rep(habitat_use$CanopyClosure, each = 3),
leaf_litter_depth = rep(habitat_use$LeafLitterDepth, each = 3),
understory_height = rep(habitat_use$HerbPlantHeight, each = 3)) %>%
rename(coverage = SC)
head(df)
SR_data <- filter(df, Diversity == 'Species richness') %>% filter(compartment_age!='Unlogged') %>%
mutate(compartment_age = as.numeric(as.character(SR_data$compartment_age)))
# fascinating groups....
# it is NOT aligned with any of the covariates.  Nada to Check.
ggplot(SR_data, aes(x = compartment_age, y = Estimator))+
geom_point(size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
theme_bw()
head(df)
SR_data <- filter(df, order == 0) %>% filter(compartment_age!='Unlogged') %>%
mutate(compartment_age = as.numeric(as.character(SR_data$compartment_age)))
SR_data
# fascinating groups....
# it is NOT aligned with any of the covariates.  Nada to Check.
ggplot(SR_data, aes(x = compartment_age, y = Estimator))+
geom_point(size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
theme_bw()
head(SR_data)
df <- data.frame(diversity_data_cov,
compartment_age = rep(habitat_use$ForestAge, each= 3),
canopy_closure = rep(habitat_use$CanopyClosure, each = 3),
leaf_litter_depth = rep(habitat_use$LeafLitterDepth, each = 3),
understory_height = rep(habitat_use$HerbPlantHeight, each = 3)) %>%
rename(coverage = SC, qD = diversity)
df <- data.frame(diversity_data_cov,
compartment_age = rep(habitat_use$ForestAge, each= 3),
canopy_closure = rep(habitat_use$CanopyClosure, each = 3),
leaf_litter_depth = rep(habitat_use$LeafLitterDepth, each = 3),
understory_height = rep(habitat_use$HerbPlantHeight, each = 3)) %>%
rename(coverage = SC) %>% rename(qD = diversity)
df <- data.frame(diversity_data_cov,
compartment_age = rep(habitat_use$ForestAge, each= 3),
canopy_closure = rep(habitat_use$CanopyClosure, each = 3),
leaf_litter_depth = rep(habitat_use$LeafLitterDepth, each = 3),
understory_height = rep(habitat_use$HerbPlantHeight, each = 3)) %>%
rename(coverage = SC) %>% rename(qD = diversity_estimate)
df <- data.frame(diversity_data_cov,
compartment_age = rep(habitat_use$ForestAge, each= 3),
canopy_closure = rep(habitat_use$CanopyClosure, each = 3),
leaf_litter_depth = rep(habitat_use$LeafLitterDepth, each = 3),
understory_height = rep(habitat_use$HerbPlantHeight, each = 3)) %>%
rename(coverage = SC) %>% rename(diversity_estimate = qD)
head(df)
# fascinating groups....
# it is NOT aligned with any of the covariates.  Nada to Check.
ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
theme_bw()
SR_data <- filter(df, order == 0) %>% filter(compartment_age!='Unlogged') %>%
mutate(compartment_age = as.numeric(as.character(SR_data$compartment_age)))
# fascinating groups....
# it is NOT aligned with any of the covariates.  Nada to Check.
ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
theme_bw()
# linear model with all terms.  log transforming the Estimator may be justified
mod <- lm(Estimator ~ compartment_age +
canopy_closure + leaf_litter_depth + understory_height,
data = SR_data)
# linear model with all terms.  log transforming the Estimator may be justified
mod <- lm(diversity_estimate ~ compartment_age +
canopy_closure + leaf_litter_depth + understory_height,
data = SR_data)
autoplot(mod)
autoplot(mod)
# signficnant (almost) age and leaf litter.
# log transformation removes age.
summary(mod)
# at 80% coverage (extrapolated)
coverage_min_diversity <- estimateD(compartment_use, base = 'coverage', level = 0.8) %>% rename(Site = site)
# visualise the results
# feel free to create more than one version of this!
par(mfrow = c(1,2))
plot(compartment_mod, type = 1)
plot(compartment_mod, type = 3)
# Step 4: Collect Asymptotic estimates for downstream analyses and add habitat data ----
diversity_data_obs <- compartment_mod$AsyEst %>% arrange(as.character(Site))
diversity_data_cov <- coverage_min_diversity %>% arrange(as.character(Site))
unique(diversity_data_cov$Site)
habitat2 <- arrange(habitat, Compartment) %>% rename(Site = Compartment)
habitat_use <- filter(habitat2, Site %in% diversity_data_cov$Site)
names(habitat_use)
df <- data.frame(diversity_data_cov,
compartment_age = rep(habitat_use$ForestAge, each= 3),
canopy_closure = rep(habitat_use$CanopyClosure, each = 3),
leaf_litter_depth = rep(habitat_use$LeafLitterDepth, each = 3),
understory_height = rep(habitat_use$HerbPlantHeight, each = 3)) %>%
rename(coverage = SC) %>% rename(diversity_estimate = qD)
head(df)
SR_data <- filter(df, order == 0) %>% filter(compartment_age!='Unlogged') %>%
mutate(compartment_age = as.numeric(as.character(SR_data$compartment_age)))
# fascinating groups....
ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
theme_bw()
# linear model with all terms.  log transforming the Estimator may be justified
mod <- lm(diversity_estimate ~ compartment_age +
canopy_closure + leaf_litter_depth + understory_height,
data = SR_data)
autoplot(mod)
# signficnant (almost) age and leaf litter.
# log transformation removes age.
summary(mod)
# at the minimum coverage
coverage_min_diversity <- estimateD(compartment_use, base = 'coverage') %>%
rename(Site = site)
# visualise the results
# feel free to create more than one version of this!
par(mfrow = c(1,2))
plot(compartment_mod, type = 1)
plot(compartment_mod, type = 3)
# Step 4: Collect Asymptotic estimates for downstream analyses and add habitat data ----
diversity_data_obs <- compartment_mod$AsyEst %>% arrange(as.character(Site))
diversity_data_cov <- coverage_min_diversity %>% arrange(as.character(Site))
unique(diversity_data_cov$Site)
habitat2 <- arrange(habitat, Compartment) %>% rename(Site = Compartment)
habitat_use <- filter(habitat2, Site %in% diversity_data_cov$Site)
names(habitat_use)
df <- data.frame(diversity_data_cov,
compartment_age = rep(habitat_use$ForestAge, each= 3),
canopy_closure = rep(habitat_use$CanopyClosure, each = 3),
leaf_litter_depth = rep(habitat_use$LeafLitterDepth, each = 3),
understory_height = rep(habitat_use$HerbPlantHeight, each = 3)) %>%
rename(coverage = SC) %>% rename(diversity_estimate = qD)
SR_data <- filter(df, order == 0) %>% filter(compartment_age!='Unlogged') %>%
mutate(compartment_age = as.numeric(as.character(SR_data$compartment_age)))
head(df)
# fascinating groups....
ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
theme_bw()
# linear model with all terms.  log transforming the Estimator may be justified
mod <- lm(diversity_estimate ~ compartment_age +
canopy_closure + leaf_litter_depth + understory_height,
data = SR_data)
autoplot(mod)
# signficnant (almost) age and leaf litter.
# log transformation removes age.
summary(mod)
# plot model results ----
# Step 1
# newX are defined on a grid of age and leaf litter (significant terms)
# and tat the mean of canopy and understory (insignficant)
newX <- expand.grid(compartment_age = seq(from = 0, to = 50, by = 1),
canopy_closure = mean(SR_data$canopy_closure),
leaf_litter_depth = seq(from = 2, to = 5, by = 1),
understory_height = mean(SR_data$understory_height))
# Step 2: get the predictions
newY <- predict(mod, newdata = newX, interval = 'confidence')
# Step 3: Housekeeping to create data frame to plot
plotThese<-data.frame(newX, newY)
# Step 4: make the plot
ggplot(plotThese, aes(x = compartment_age, y = fit, min = lwr, max = upr,
colour = factor(leaf_litter_depth)))+
geom_line() +
theme_bw()
# signficnant (almost) age and leaf litter.
# log transformation removes age.
summary(mod)
SR_data$understory_height
# plot model results ----
# Step 1
# newX are defined on a grid of age and leaf litter (significant terms)
# and tat the mean of canopy and understory (insignficant)
newX <- expand.grid(compartment_age = seq(from = 0, to = 50, by = 1),
canopy_closure = mean(SR_data$canopy_closure),
leaf_litter_depth = mean(SR_data$leaf_litter_depth),
understory_height = seq(from = 30, to = 100, by = 10))
# Step 2: get the predictions
newY <- predict(mod, newdata = newX, interval = 'confidence')
# Step 3: Housekeeping to create data frame to plot
plotThese<-data.frame(newX, newY)
# Step 4: make the plot
ggplot(plotThese, aes(x = compartment_age, y = fit, min = lwr, max = upr,
colour = factor(leaf_litter_depth)))+
geom_line() +
theme_bw()
# Step 4: make the plot
ggplot(plotThese, aes(x = compartment_age, y = fit, min = lwr, max = upr,
colour = factor(understory_height)))+
geom_line() +
theme_bw()
# Step 3: Housekeeping to create data frame to plot
plotThese<-data.frame(newX, newY) %>% rename("Predicted Diversity" = fit)
# Step 4: make the plot
ggplot(plotThese, aes(x = compartment_age, y = 'Predicted Diversity', min = lwr, max = upr,
colour = factor(understory_height)))+
geom_line() +
theme_bw()
plotThese
head(plotThese)
# Step 4: make the plot
ggplot(plotThese, aes(x = compartment_age, y = `Predicted Diversity`, min = lwr, max = upr,
colour = factor(understory_height)))+
geom_line() +
theme_bw()
# Step 4: make the plot
ggplot(plotThese, aes(x = compartment_age, y = `Predicted Diversity`,
min = lwr, max = upr,
colour = factor(understory_height)))+
geom_line() +
geom_ribbon()+
theme_bw()
# Step 4: make the plot
ggplot(plotThese, aes(x = compartment_age, y = `Predicted Diversity`,
group = factor(understory_height),
min = lwr, max = upr,
colour = factor(understory_height)))+
geom_line() +
geom_ribbon()+
theme_bw()
?geom_ribbon
# Step 4: make the plot
ggplot(plotThese, aes(x = compartment_age, y = `Predicted Diversity`,
group = factor(understory_height),
ymin = lwr, ymax = upr,
colour = factor(understory_height)))+
geom_line() +
geom_ribbon()+
theme_bw()
# Step 4: make the plot
ggplot(plotThese, aes(x = compartment_age, y = `Predicted Diversity`,
group = factor(understory_height),
ymin = lwr, ymax = upr,
colour = factor(understory_height)))+
geom_line() +
geom_ribbon(alpha = 0.1)+
theme_bw()
# Step 4: make the plot
ggplot(plotThese, aes(x = compartment_age, y = `Predicted Diversity`,
colour = factor(understory_height)))+
geom_line() +
theme_bw()
# plot model results ----
# Step 1
# newX are defined on a grid of age and leaf litter (significant terms)
# and tat the mean of canopy and understory (insignficant)
newX <- expand.grid(compartment_age = seq(from = 0, to = 50, by = 1),
canopy_closure = mean(SR_data$canopy_closure),
leaf_litter_depth = mean(SR_data$leaf_litter_depth),
understory_height = seq(from = 30, to = 100, by = 10))
# Step 2: get the predictions
newY <- predict(mod, newdata = newX, interval = 'confidence')
# Step 3: Housekeeping to create data frame to plot
plotThese<-data.frame(newX, newY) %>% rename("Predicted Diversity" = fit)
head(plotThese)
head(SR_data)
tail(SR_data)
filter(df, order == 0)
SR_logged <- filter(df, order == 0) %>% filter(compartment_age =='Unlogged') %>%
mutate(compartment_age = as.numeric(as.character(SR_data$compartment_age)))
filter(df, order == 0) %>% filter(compartment_age =='Unlogged')
SR_logged <- filter(df, order == 0) %>% filter(compartment_age =='Unlogged')
# fascinating groups....
ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = SR_logged, aes(x = 50, y = diversity_estimate), colour = red)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
theme_bw()
# fascinating groups....
ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = SR_logged, aes(x = 50, y = diversity_estimate), colour = 'red')+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
theme_bw()
# fascinating groups....
ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = SR_logged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
theme_bw()
# fascinating groups....
ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_jitter(data = SR_logged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5, width = 0.1)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
theme_bw()
# fascinating groups....
ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_jitter(data = SR_logged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5, width = 0.25)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
theme_bw()
# fascinating groups....
ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_jitter(data = SR_logged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
theme_bw()
# fascinating groups....
ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_jitter(data = SR_logged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5, width = 0.25)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
theme_bw()
# fascinating groups....
ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_jitter(data = SR_logged, aes(x = 50, y = diversity_estimate, width = 0.25), colour = 'red', size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
theme_bw()
# fascinating groups....
ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_jitter(data = SR_logged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
theme_bw()
# fascinating groups....
ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = SR_logged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
theme_bw()
# linear model with all terms.  log transforming the Estimator may be justified
mod <- lm(log(diversity_estimate) ~ compartment_age +
canopy_closure + leaf_litter_depth + understory_height,
data = SR_data)
autoplot(mod)
autoplot(mod, smooth.colour = NA)
# linear model with all terms.  log transforming the Estimator may be justified
mod <- lm((diversity_estimate) ~ compartment_age +
canopy_closure + leaf_litter_depth + understory_height,
data = SR_data)
autoplot(mod, smooth.colour = NA)
# linear model with all terms.  log transforming the Estimator may be justified
mod <- lm(log(diversity_estimate) ~ compartment_age +
canopy_closure + leaf_litter_depth + understory_height,
data = SR_data)
autoplot(mod, smooth.colour = NA)
# signficnant (almost) age and leaf litter.
# log transformation removes age.
summary(mod)
# plot model results ----
# Step 1
# newX are defined on a grid of age and leaf litter (significant terms)
# and tat the mean of canopy and understory (insignficant)
newX <- expand.grid(compartment_age = seq(from = 0, to = 50, by = 1),
canopy_closure = mean(SR_data$canopy_closure),
leaf_litter_depth = mean(SR_data$leaf_litter_depth),
understory_height = seq(from = 30, to = 100, by = 10))
# Step 2: get the predictions
newY <- predict(mod, newdata = newX, interval = 'confidence')
# Step 3: Housekeeping to create data frame to plot
plotThese<-data.frame(newX, newY) %>% rename("Predicted Diversity" = fit)
head(plotThese)
# Step 4: make the plot
ggplot(plotThese, aes(x = compartment_age, y = `Predicted Diversity`,
colour = factor(understory_height)))+
geom_line() +
theme_bw()
