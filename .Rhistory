spider$Girdled
c(spider$Girdled[1:5],1)
iNEXT(c(spider$Girdled[1:5],1))
traceback
traceback()
iNEXT(c(spider$Girdled[1:5],1))
traceback()
iNEXT(c(spider$Girdled[1:5],1,1))
iNEXT(c(spider$Girdled[1:4],1,1))
iNEXT(c(spider$Girdled[1:3],1,1))
iNEXT(c(spider$Girdled[1:3],1,))
iNEXT(c(spider$Girdled[1:3],1))
spider
spider[spider>1]
spider$Girdled[spider$Girdled>1]
iNEXT(spider$Girdled[spider$Girdled>1])
spider$Girdled[spider$Girdled>1]
spiderG1 <- spider$Girdled
spiderG2 <- spider$Girdled[spider$Girdled>1]
spiderG3 <- c(spider$Girdled[spider$Girdled>1]),1,1,1)
spiderG4 <- c(spider$Girdled[spider$Girdled>1]),1,1)
data(spider)
spiderG1 <- spider$Girdled
spiderG2 <- spider$Girdled[spider$Girdled>1]
spiderG3 <- c(spider$Girdled[spider$Girdled>1]),1,1,1)
spiderG4 <- c(spider$Girdled[spider$Girdled>1]),1,1)
spiderG3 <- c(spider$Girdled[spider$Girdled>1],1,1,1)
spiderG4 <- c(spider$Girdled[spider$Girdled>1],1,1)
iNEXT(spiderG1)
iNEXT(spiderG2)
iNEXT(spiderG3)
iNEXT(spiderG4)
spiderG4 <- c(spider$Girdled[spider$Girdled>1],1)
iNEXT(spiderG4)
spiderG5 <- c(spider$Girdled[spider$Girdled>1],0)
iNEXT(spiderG5)
spiderG5 <- c(spider$Girdled[spider$Girdled>1],1,0) # NOT OK
iNEXT(spiderG5)
spiderG5 <- c(spider$Girdled[spider$Girdled>1],1,0) # NOT OK
spiderG5
iNEXT(spiderG5)
iNEXT(spiderG4)
spiderG2 <- spider$Girdled[spider$Girdled>1]  # NOT OK
iNEXT(spiderG2)
spider$Girdled[spider$Girdled>1]
spiderG1 <- spider$Girdled # OK
spiderG2 <- spider$Girdled[spider$Girdled>1]  # NOT OK
spiderG3 <- c(spider$Girdled[spider$Girdled>1],1,1)  # OK
spiderG4 <- c(spider$Girdled[spider$Girdled>1],1) # OK
spiderG5 <- c(spider$Girdled[spider$Girdled>1],1) # NOT OK
spiderG6 <- c(spider$Girdled[spider$Girdled>1],1,0) # Oddly OK
spiderG7 <- c(spider$Girdled[spider$Girdled>1],0) # Oddly OK
iNEXT(spiderG1)
iNEXT(spiderG2)
iNEXT(spiderG3)
iNEXT(spiderG4)
iNEXT(spiderG5)
iNEXT(spiderG6)
iNEXT(spiderG7)
iNEXT(spiderG1)
iNEXT(spiderG2)
iNEXT(spiderG3)
iNEXT(spiderG4)
iNEXT(spiderG5)
iNEXT(spiderG3)
spiderG3 <- c(spider$Girdled[spider$Girdled>1],1,1)  # OK
spiderG4 <- c(spider$Girdled[spider$Girdled>1],1) # OK
spiderG5 <- c(spider$Girdled[spider$Girdled>1],1,0) # Oddly OK
spiderG6 <- c(spider$Girdled[spider$Girdled>1],0,1) # Incorrect Warning
iNEXT(spiderG3)
iNEXT(spiderG4)
iNEXT(spiderG5)
iNEXT(spiderG6)
spiderG6 <- c(spider$Girdled[spider$Girdled>1],0,0) # Incorrect Warning
iNEXT(spiderG6)
spiderG5 <- c(spider$Girdled[spider$Girdled>1],1,0) # Oddly OK
spiderG6 <- c(spider$Girdled[spider$Girdled>1],0) # Oddly OK
spiderG7 <- c(spider$Girdled[spider$Girdled>1],0,0) # Incorrect Warning
iNEXT(spiderG5)
iNEXT(spiderG6)
iNEXT(spiderG7)
spiderG5 <- c(spider$Girdled[spider$Girdled>1],1,0) # Oddly OK
spiderG5
iNEXT(spiderG5)
update.packages()
coverage_min_diversity <- estimateD(compartment_use, base = 'coverage') %>%
rename(Site = site)
?estimateD
coverage_min_diversity <- estimateD(compartment_use, base = 'coverage', level = NULL) %>%
rename(Site = site)
# visualise the results
# feel free to create more than one version of this!
par(mfrow = c(1,2))
plot(compartment_mod, type = 1)
plot(compartment_mod, type = 3)
?plot.iNEXT
diversity_data_observations <- compartment_mod$AsyEst %>% arrange(as.character(Site))
diversity_data_coverage <- coverage_min_diversity %>% arrange(as.character(Site))
unique(diversity_data_cov$Site)
unique(diversity_data_coverage$Site)
habitat2 <- arrange(habitat, Compartment) %>% rename(Site = Compartment)
habitat_use <- filter(habitat2, Site %in% diversity_data_cov$Site)
habitat_use <- filter(habitat2, Site %in% diversity_data_coverage$Site)
names(habitat_use)
df <- data.frame(diversity_data_cov,
compartment_age = rep(habitat_use$ForestAge, each= 3),
canopy_closure = rep(habitat_use$CanopyClosure, each = 3),
leaf_litter_depth = rep(habitat_use$LeafLitterDepth, each = 3),
understory_height = rep(habitat_use$HerbPlantHeight, each = 3),
No.WaterBodies = rep(habitat_use$No.WaterBodies, each = 3),
WaterDistance = rep(habitat_use$WaterDistance, each = 3) %>%
rename(coverage = SC) %>%
rename(diversity_estimate = qD))
head(df)
df <- data.frame(diversity_data_coverage,
compartment_age = rep(habitat_use$ForestAge, each= 3),
canopy_closure = rep(habitat_use$CanopyClosure, each = 3),
leaf_litter_depth = rep(habitat_use$LeafLitterDepth, each = 3),
understory_height = rep(habitat_use$HerbPlantHeight, each = 3),
No.WaterBodies = rep(habitat_use$No.WaterBodies, each = 3),
WaterDistance = rep(habitat_use$WaterDistance, each = 3) %>%
rename(coverage = SC) %>%
rename(diversity_estimate = qD))
df <- data.frame(diversity_data_coverage,
compartment_age = rep(habitat_use$ForestAge, each= 3),
canopy_closure = rep(habitat_use$CanopyClosure, each = 3),
leaf_litter_depth = rep(habitat_use$LeafLitterDepth, each = 3),
understory_height = rep(habitat_use$HerbPlantHeight, each = 3),
No.WaterBodies = rep(habitat_use$No.WaterBodies, each = 3),
WaterDistance = rep(habitat_use$WaterDistance, each = 3))
head(df)
df <- data.frame(diversity_data_coverage,
compartment_age = rep(habitat_use$ForestAge, each= 3),
canopy_closure = rep(habitat_use$CanopyClosure, each = 3),
leaf_litter_depth = rep(habitat_use$LeafLitterDepth, each = 3),
understory_height = rep(habitat_use$HerbPlantHeight, each = 3),
No.WaterBodies = rep(habitat_use$No.WaterBodies, each = 3),
WaterDistance = rep(habitat_use$WaterDistance, each = 3)) %>%
rename(coverage = SC) %>%
rename(diversity_estimate = qD))
df <- data.frame(diversity_data_coverage,
compartment_age = rep(habitat_use$ForestAge, each= 3),
canopy_closure = rep(habitat_use$CanopyClosure, each = 3),
leaf_litter_depth = rep(habitat_use$LeafLitterDepth, each = 3),
understory_height = rep(habitat_use$HerbPlantHeight, each = 3),
No.WaterBodies = rep(habitat_use$No.WaterBodies, each = 3),
WaterDistance = rep(habitat_use$WaterDistance, each = 3)) %>%
rename(coverage = SC) %>%
rename(diversity_estimate = qD)
head(df)
##
arrange(habitat, Compartment) %>% rename(Site = Compartment)
diversity_data_coverage$Site
levels(diversity_data_coverage$Site)
levels(habitat2$Site)
# organise the habitat data ----
# some compartments are not represented in the iNEXT data (no species)
habitat2 <- arrange(habitat, Compartment) %>% rename(Site = Compartment)
habitat_use <- filter(habitat2, Site %in% levels(diversity_data_coverage$Site))
names(habitat_use)
df <- data.frame(diversity_data_coverage,
compartment_age = rep(habitat_use$ForestAge, each= 3),
canopy_closure = rep(habitat_use$CanopyClosure, each = 3),
leaf_litter_depth = rep(habitat_use$LeafLitterDepth, each = 3),
understory_height = rep(habitat_use$HerbPlantHeight, each = 3),
No.WaterBodies = rep(habitat_use$No.WaterBodies, each = 3),
WaterDistance = rep(habitat_use$WaterDistance, each = 3)) %>%
rename(coverage = SC) %>%
rename(diversity_estimate = qD)
head(df)
levels(df$Site)
SR_data <- filter(df, order == 0) %>% filter(compartment_age!='Unlogged') %>%
mutate(compartment_age = as.numeric(as.character(SR_data$compartment_age)))
SR_data <- filter(df, order == 0) %>% filter(compartment_age!='Unlogged')
SR_data
# Isolate Species Richness data (order/q = 0)
# temporarily remove Unlogged?  (set at age 0 above)
SR_data <- filter(df, order == 0) %>% filter(compartment_age!='Unlogged') %>%
mutate(compartment_age = as.numeric(as.character(compartment_age)))
SR_unlogged <- filter(df, order == 0) %>% filter(compartment_age =='Unlogged')
head(SR_data)
tail(SR_data)
# fascinating groups....
ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = SR_logged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
theme_bw()
# fascinating groups....
ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = SR_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
theme_bw()
Simp_data <- filter(df, order == 3) %>% filter(compartment_age!='Unlogged') %>%
mutate(compartment_age = as.numeric(as.character(compartment_age)))
Simp_unlogged <- filter(df, order == 3) %>% filter(compartment_age =='Unlogged')
?iNEXT
SR_plot <- ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = SR_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
theme_bw()
Simp_plot <- ggplot(Simp_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = Simp_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
theme_bw()
grid.arrange(SR_plot, Simp_plot)
Simp_data <- filter(df, order == 2) %>% filter(compartment_age!='Unlogged') %>%
mutate(compartment_age = as.numeric(as.character(compartment_age)))
Simp_unlogged <- filter(df, order == 2) %>% filter(compartment_age =='Unlogged')
Simp_plot <- ggplot(Simp_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = Simp_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
theme_bw()
grid.arrange(SR_plot, Simp_plot)
# fascinating groups....
SR_plot <- ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = SR_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
labs(x = "Compartment Age (Years Since Last Logging)",
y = "Species Richness Estimate") +
theme_bw()
Simp_plot <- ggplot(Simp_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = Simp_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
labs(x = "Compartment Age (Years Since Last Logging)",
y = "Simpsons Diversity Estimate") +
theme_bw()
grid.arrange(SR_plot, Simp_plot)
ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = SR_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
labs(x = "Compartment Age (Years Since Last Logging)",
y = "Species Richness Estimate") +
theme_bw()
ggplot(Simp_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = Simp_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2) +
labs(x = "Compartment Age (Years Since Last Logging)",
y = "Simpsons Diversity Estimate") +
theme_bw()
grid.arrange(SR_plot, Simp_plot)
?annotate
ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = SR_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
labs(x = "Compartment Age (Years Since Last Logging)",
y = "Species Richness Estimate") +
annotate('text', x = 48, y = 3, angle = 90, text = "Unlogged", col = 'red')+
theme_bw()
ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = SR_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
labs(x = "Compartment Age (Years Since Last Logging)",
y = "Species Richness Estimate") +
annotate('text', x = 48, y = 3, angle = 90, label = "Unlogged", col = 'red')+
theme_bw()
# fascinating groups....
SR_plot <- ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = SR_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2)+
labs(x = "Compartment Age (Years Since Last Logging)",
y = "Species Richness Estimate") +
annotate('text', x = 48, y = 3, angle = 90, label = "Unlogged", col = 'red')+
theme_bw()
Simp_plot <- ggplot(Simp_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = Simp_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_text(aes(label=Site),hjust=0.5, vjust=-2) +
labs(x = "Compartment Age (Years Since Last Logging)",
y = "Simpsons Diversity Estimate") +
annotate('text', x = 48, y = 2, angle = 90, label = "Unlogged", col = 'red') +
theme_bw()
grid.arrange(SR_plot, Simp_plot)
library(ggrepel)
?ggrepel
ggplot(Simp_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = Simp_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_text_repel(aes(label=Site)) +
labs(x = "Compartment Age (Years Since Last Logging)",
y = "Simpsons Diversity Estimate") +
annotate('text', x = 48, y = 2, angle = 90, label = "Unlogged", col = 'red') +
theme_bw()
ggplot(Simp_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = Simp_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_label_repel(aes(label=Site)) +
labs(x = "Compartment Age (Years Since Last Logging)",
y = "Simpsons Diversity Estimate") +
annotate('text', x = 48, y = 2, angle = 90, label = "Unlogged", col = 'red') +
theme_bw()
ggplot(Simp_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = Simp_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_label_repel(aes(label=Site), min.segment.length = 0.1) +
labs(x = "Compartment Age (Years Since Last Logging)",
y = "Simpsons Diversity Estimate") +
annotate('text', x = 48, y = 2, angle = 90, label = "Unlogged", col = 'red') +
theme_bw()
ggplot(Simp_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = Simp_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_label_repel(aes(label=Site), min.segment.length = 0.5) +
labs(x = "Compartment Age (Years Since Last Logging)",
y = "Simpsons Diversity Estimate") +
annotate('text', x = 48, y = 2, angle = 90, label = "Unlogged", col = 'red') +
theme_bw()
ggplot(Simp_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = Simp_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_label_repel(aes(label=Site), min.segment.length = 1) +
labs(x = "Compartment Age (Years Since Last Logging)",
y = "Simpsons Diversity Estimate") +
annotate('text', x = 48, y = 2, angle = 90, label = "Unlogged", col = 'red') +
theme_bw()
ggplot(Simp_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = Simp_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_label_repel(aes(label=Site), min.segment.length = 1) +
labs(x = "Compartment Age (Years Since Last Logging)",
y = "Simpsons Diversity Estimate") +
annotate('text', x = 48, y = 2, angle = 90, label = "Unlogged", col = 'red') +
theme_bw()
p <- ggplot(mtcars,
aes(wt, mpg, label = rownames(mtcars), colour = factor(cyl))) +
geom_point()
p + geom_text_repel()
ggplot(Simp_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_point(data = Simp_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
geom_text_repel(aes(label=Site), min.segment.length = 1) +
labs(x = "Compartment Age (Years Since Last Logging)",
y = "Simpsons Diversity Estimate") +
annotate('text', x = 48, y = 2, angle = 90, label = "Unlogged", col = 'red') +
theme_bw()
ggplot(Simp_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_text_repel(aes(label=Site), min.segment.length = 1) +
geom_point(data = Simp_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
labs(x = "Compartment Age (Years Since Last Logging)",
y = "Simpsons Diversity Estimate") +
annotate('text', x = 48, y = 2, angle = 90, label = "Unlogged", col = 'red') +
theme_bw()
ggplot(Simp_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_text_repel(aes(label=Site), min.segment.length = 0) +
geom_point(data = Simp_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
labs(x = "Compartment Age (Years Since Last Logging)",
y = "Simpsons Diversity Estimate") +
annotate('text', x = 48, y = 2, angle = 90, label = "Unlogged", col = 'red') +
theme_bw()
p + geom_text_repel(point.padding = NA)
grid.arrange(SR_plot, Simp_plot)
p + geom_text_repel(point.padding = NA)
ggplot(Simp_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_text_repel(aes(label=Site), point.padding = 0.5) +
geom_point(data = Simp_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
labs(x = "Compartment Age (Years Since Last Logging)",
y = "Simpsons Diversity Estimate") +
annotate('text', x = 48, y = 2, angle = 90, label = "Unlogged", col = 'red') +
theme_bw()
# fascinating groups....
SR_plot <- ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_text_repel(aes(label=Site), point.padding = 0.5) +
geom_point(data = SR_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
labs(x = "Compartment Age (Years Since Last Logging)",
y = "Species Richness Estimate") +
annotate('text', x = 48, y = 3, angle = 90, label = "Unlogged", col = 'red')+
theme_bw()
Simp_plot <- ggplot(Simp_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_text_repel(aes(label=Site), point.padding = 0.5) +
geom_point(data = Simp_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
labs(x = "Compartment Age (Years Since Last Logging)",
y = "Simpsons Diversity Estimate") +
annotate('text', x = 48, y = 2, angle = 90, label = "Unlogged", col = 'red') +
theme_bw()
grid.arrange(SR_plot, Simp_plot)
SR_data
# linear model with all terms.  log transforming the Estimator may be justified
mod <- lm(log(diversity_estimate) ~ compartment_age +
canopy_closure + leaf_litter_depth + understory_height + No.WaterBodies,
data = SR_data)
autoplot(mod, smooth.colour = NA)
# signficnant (almost) age and leaf litter.
# log transformation removes age.
summary(mod)
# linear model with all terms.  log transforming the Estimator may be justified
mod <- lm((diversity_estimate) ~ compartment_age +
canopy_closure + leaf_litter_depth + understory_height + No.WaterBodies,
data = SR_data)
autoplot(mod, smooth.colour = NA)
# signficnant (almost) age and leaf litter.
# log transformation removes age.
summary(mod)
habitat <- read.csv('SpeciesAdultData/DTC-AverageHabitatCompt-Age.csv')
# organise the habitat data ----
# some compartments are not represented in the iNEXT data (no species)
habitat2 <- arrange(habitat, Compartment) %>% rename(Site = Compartment)
habitat_use <- filter(habitat2, Site %in% levels(diversity_data_coverage$Site))
names(habitat_use)
df <- data.frame(diversity_data_coverage,
compartment_age = rep(habitat_use$ForestAge, each= 3),
canopy_closure = rep(habitat_use$CanopyClosure, each = 3),
leaf_litter_depth = rep(habitat_use$LeafLitterDepth, each = 3),
understory_height = rep(habitat_use$HerbPlantHeight, each = 3),
No.WaterBodies = rep(habitat_use$No.WaterBodies, each = 3),
WaterDistance = rep(habitat_use$WaterDistance, each = 3)) %>%
rename(coverage = SC) %>%
rename(diversity_estimate = qD)
# quick check
head(df)
# Isolate Species Richness data (order/q = 0)
# temporarily remove Unlogged?  (set at age 0 above)
SR_data <- filter(df, order == 0) %>% filter(compartment_age!='Unlogged') %>%
mutate(compartment_age = as.numeric(as.character(compartment_age)))
SR_unlogged <- filter(df, order == 0) %>% filter(compartment_age =='Unlogged')
Simp_data <- filter(df, order == 2) %>% filter(compartment_age!='Unlogged') %>%
mutate(compartment_age = as.numeric(as.character(compartment_age)))
Simp_unlogged <- filter(df, order == 2) %>% filter(compartment_age =='Unlogged')
head(SR_data)
tail(SR_data)
# fascinating groups....
SR_plot <- ggplot(SR_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_text_repel(aes(label=Site), point.padding = 0.5) +
geom_point(data = SR_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
labs(x = "Compartment Age (Years Since Last Logging)",
y = "Species Richness Estimate") +
annotate('text', x = 48, y = 3, angle = 90, label = "Unlogged", col = 'red')+
theme_bw()
Simp_plot <- ggplot(Simp_data, aes(x = compartment_age, y = diversity_estimate))+
geom_point(size = 5)+
geom_text_repel(aes(label=Site), point.padding = 0.5) +
geom_point(data = Simp_unlogged, aes(x = 50, y = diversity_estimate), colour = 'red', size = 5)+
labs(x = "Compartment Age (Years Since Last Logging)",
y = "Simpsons Diversity Estimate") +
annotate('text', x = 48, y = 2, angle = 90, label = "Unlogged", col = 'red') +
theme_bw()
grid.arrange(SR_plot, Simp_plot)
# linear model with all terms.  log transforming the Estimator may be justified
mod <- lm((diversity_estimate) ~ compartment_age +
canopy_closure + leaf_litter_depth + understory_height + No.WaterBodies,
data = SR_data)
autoplot(mod, smooth.colour = NA)
# signficnant (almost) age and leaf litter.
# log transformation removes age.
summary(mod)
library(MASS)
stepAIC(mod)
mm<-stepAIC(mod)
summary(mm)
names(SR_data)
?map_at
# habitat plots ----
SR_canopy_closure <- ggplot(SR_data, aes(x = canopy_closure, y = diversity_estimate))+
geom_point(size = 5)+
geom_text_repel(aes(label=Site), point.padding = 0.5) +
labs(x = "Canopy Closure",
y = "Species Richness Estimate") +
theme_bw()
SR_leaf_litter_depth <- ggplot(SR_data, aes(x = leaf_litter_depth, y = diversity_estimate))+
geom_point(size = 5)+
geom_text_repel(aes(label=Site), point.padding = 0.5) +
labs(x = "Leaf Litter Depth",
y = "Species Richness Estimate") +
theme_bw()
SR_understory_height <- ggplot(SR_data, aes(x = understory_height, y = diversity_estimate))+
geom_point(size = 5)+
geom_text_repel(aes(label=Site), point.padding = 0.5) +
labs(x = "Understory Height",
y = "Species Richness Estimate") +
theme_bw()
SR_No.WaterBodies <- ggplot(SR_data, aes(x = No.WaterBodies, y = diversity_estimate))+
geom_point(size = 5)+
geom_text_repel(aes(label=Site), point.padding = 0.5) +
labs(x = "No.WaterBodies",
y = "Species Richness Estimate") +
theme_bw()
grid.arrange(SR_canopy_closure, SR_leaf_litter_depth,
SR_understory_height, SR_No.WaterBodies,
ncol = 2)
SR_data
SR_data
write.csc(SR_data, file = "SR_data_out.csv")
write.csv(SR_data, file = "SR_data_out.csv")
grid.arrange(SR_plot, Simp_plot)
grid.arrange(SR_canopy_closure, SR_leaf_litter_depth,
SR_understory_height, SR_No.WaterBodies,
ncol = 2)
mod_step <- stepAIC(mod)
summary(mod_step)
library(heplots) # effect sizes +
install.packages(heplots)
install.packages('heplots')
library(heplots) # effect sizes +
etasq(mod_step)
etasq(mod_step, anova = TRUE)
etasq(mod, anova = TRUE)
